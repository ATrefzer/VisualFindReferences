<UserControl
    x:Class="VisualFindReferences.Views.VisualFindReferencesHost"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:v="clr-namespace:VisualFindReferences.Core.Graph.View;assembly=VisualFindReferences.Core"
    xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <StaticResource ResourceKey="{x:Static vsfx:VsResourceKeys.ThemedDialogDefaultStylesKey}" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border
                                x:Name="Border"
                                Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"
                                BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,4,0,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuSeparatorBrushKey}}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  TopLevelHeader  -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="6,3,6,3"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Bottom"
                            PopupAnimation="Fade">
                            <Border
                                x:Name="SubmenuBorder"
                                Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  TopLevelItem  -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="6,3,6,3"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  SubmenuItem  -->
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <Border
                            x:Name="Check"
                            Width="13"
                            Height="13"
                            Margin="6,0,6,0"
                            Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"
                            BorderThickness="1"
                            Visibility="Collapsed">
                            <Path
                                x:Name="CheckMark"
                                Width="7"
                                Height="7"
                                Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                SnapsToDevicePixels="False"
                                Stroke="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}"
                                StrokeThickness="2"
                                Visibility="Hidden" />
                        </Border>
                        <ContentPresenter
                            x:Name="HeaderHost"
                            Grid.Column="1"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="2"
                            Margin="5,2,0,2"
                            DockPanel.Dock="Right"
                            Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="Icon"
                            Margin="6,0,6,0"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <ContentPresenter
                            x:Name="HeaderHost"
                            Grid.Column="1"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="2"
                            Margin="5,2,2,2"
                            DockPanel.Dock="Right"
                            Text="{TemplateBinding InputGestureText}" />
                        <Path
                            Grid.Column="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 0 7 L 4 3.5 Z"
                            Fill="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}" />
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="-4"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Right"
                            PopupAnimation="Fade">
                            <Border
                                x:Name="SubmenuBorder"
                                Background="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuBorderBrushKey}}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuGlyphBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  MenuItem Style  -->
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ContextMenu x:Key="NodeContextMenu" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <v:NodeGraphView x:Name="GraphView" NodeContextMenuRequested="NodeGraphViewNodeContextMenuRequested" />
        <Grid
            x:Name="IgnoredPromptPopup"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Path
                Grid.Column="0"
                Width="16"
                Height="16"
                Margin="2"
                Data="M15,19.88C15.04,20.18 14.94,20.5 14.71,20.71C14.32,21.1 13.69,21.1 13.3,20.71L9.29,16.7C9.06,16.47 8.96,16.16 9,15.87V10.75L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L15,10.75V19.88M7.04,5L11,10.06V15.58L13,17.58V10.05L16.96,5H7.04Z"
                Fill="{DynamicResource {x:Static platformUI:EnvironmentColors.ToolWindowTextBrushKey}}"
                Stretch="Uniform" />
            <TextBlock
                Grid.Column="1"
                Margin="2"
                HorizontalAlignment="Center"
                Foreground="{DynamicResource {x:Static platformUI:EnvironmentColors.ToolWindowTextBrushKey}}"
                Text="{Binding FilteredReferencesMessage}" />
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowFilteredReferencesPrompt}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.33" Value="1" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0.9" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:5.5" Value="0.9" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:5.83" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</UserControl>
